----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.028924226760864258

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.02393484115600586

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.001999378204345703

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009937286376953125

----End Timer [Execute Mapping]:  0.026927947998046875

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.014958858489990234

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009970664978027344

----End Timer [Execute Mapping]:  0.01595592498779297

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [cx,h,x]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [cx,h,x]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.02493429183959961

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.013962984085083008

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009980201721191406

----End Timer [Execute Mapping]:  0.01595902442932129

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0019936561584472656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0029914379119873047

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,h,cx]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,h,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.022939443588256836

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.015955686569213867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.000997781753540039

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009968280792236328

----End Timer [Execute Mapping]:  0.01795029640197754

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0019953250885009766

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0019953250885009766

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,h,cx]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [cx,h,x]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.024932384490966797

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.018950700759887695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009989738464355469

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009961128234863281

----End Timer [Execute Mapping]:  0.02094578742980957

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.004987001419067383

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0069806575775146484

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [cx,x,h]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [h,x,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.019946575164794922

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.01396322250366211

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009999275207519531

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009953975677490234

----End Timer [Execute Mapping]:  0.015958547592163086

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0029921531677246094

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0029921531677246094

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,cx,h]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,cx,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.033908843994140625

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.014961957931518555

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009958744049072266

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009980201721191406

----End Timer [Execute Mapping]:  0.016955852508544922

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.001993894577026367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.002990245819091797

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,cx,h]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,cx,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.022939682006835938

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.022937536239624023

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009982585906982422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.001996278762817383

----End Timer [Execute Mapping]:  0.02593207359313965

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.002990245819091797

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0039882659912109375

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,h,cx]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,cx,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.022937297821044922

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.023938417434692383

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009953975677490234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009982585906982422

----End Timer [Execute Mapping]:  0.02593207359313965

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.002992391586303711

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0009949207305908203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009944438934326172

----End Timer [Execute Mapping]:  0.005986452102661133

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [cx,x,h]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [h,cx,x]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.04787158966064453

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.018738508224487305

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0019958019256591797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.020734310150146484

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.002992391586303711

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.002992391586303711

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,h,cx]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [x,h,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.028922080993652344

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.022939682006835938

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 12


--------End Timer [Generate Plans]:  0.0019941329956054688

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 12

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.024933815002441406

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.002992868423461914

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.002992868423461914

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [h,x,cx]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [h,x,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - cycle: 12 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.027704954147338867

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]
[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 8]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.019949674606323242

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [4, 6] cc => I, Pos: [5, 8] xx => I, Pos: [15, 16, 17] ccc => cc]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxchxhcxhcxccc ... 
target: ^ ^               

----------

Expansion: Candidates size: 1

Pos: [4, 6] cc => I

Selected: Pos: [4, 6] cc => I
    ... cxchxhcxhcxccc ... 
target: ^ ^           

----------

Expansion: Candidates size: 1

Pos: [5, 8] xx => I

Selected: Pos: [5, 8] xx => I
    ... xchxhcxhcxccc ... 
target: ^  ^         

----------

Expansion: Candidates size: 1

Pos: [15, 16, 17] ccc => cc

Selected: Pos: [15, 16, 17] ccc => cc
    ... ccc ... 
target: ^^^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [4, 6] cc => I
Pos: [5, 8] xx => I
Pos: [15, 16, 17] ccc => cc

Total Saving: 4


--------End Timer [Generate Plans]:  0.008973836898803711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I,
 Pos: [4, 6] cc => I,
 Pos: [5, 8] xx => I,
 Pos: [15, 16, 17] ccc => cc]
Change: 4, Saving: 4

Circuit before: chcxcxchxhcxhcxccc
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [5, 8] xx => I
Apply:  Pos: [15, 16, 17] ccc => cc
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0009965896606445312

----End Timer [Execute Mapping]:  0.029920101165771484

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.003989219665527344

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxhhcxhcxcc
---------------
---------------
Circuit after: hxhhcxhcxcc

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.003989219665527344

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-cx-h-x-h-cx-x-h-cx-x-cx-cx-cx 
     => total size: [18] (IBM)
 --------------------
 - qubits_num: 5, using gates: [h,x,cx]
 - circuit depth: 7 - (small)
 - circuit cycle: 27


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h-h-cx-x-h-cx-x-cx-cx 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 5, using gates: [cx,x,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 15

Reduced: 
 - size: 7 (38.89%)
 - depth: 2 (28.57%)

