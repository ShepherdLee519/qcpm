Start Timer: [Init Circuit]
End Timer [Init Circuit]:  0.09285283088684082

Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
----Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]

Candidates: 


------------ 2 ------------
Pattern: 2
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 2]

Candidates: 

[1, 3]
[2, 4]
[1, 6]
[6, 8]
[8, 9]
[11, 13]

------------ 3 ------------
Pattern: 3
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]

Candidates: 


------------ 4 ------------
Pattern: 4
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 

[0, 2, 4]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 


------------ 6 ------------
Pattern: 6
    cx [0, 1]
    cx [0, 1]
    => 
    I

Candidates: 

[5, 7]
[9, 16]

------------ 7 ------------
Pattern: 7
    x [0]
    x [0]
    => 
    I

Candidates: 

----End Timer [Find Candidates]:  0.1126718521118164

----Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2, 4] ccc => cc, Pos: [1, 3] cc => c, Pos: [1, 6] cc => c, Pos: [2, 4] cc => c, Pos: [5, 7] cc => I, Pos: [6, 8] cc => c, Pos: [8, 9] cc => c, Pos: [9, 16] cc => I, Pos: [11, 13] cc => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2, 4] ccc => cc

Selected: Pos: [0, 2, 4] ccc => cc
    ... ccccccccccccccccc ... 
target: ^ ^ ^            

----------

Expansion: Candidates size: 2

Pos: [1, 3] cc => c
Pos: [1, 6] cc => c

Selected: Pos: [1, 3] cc => c
    ... cccccccccccccccc ... 
target: ^ ^             

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cccccccccccc ... 
target: ^ ^         

----------

Expansion: Candidates size: 2

Pos: [6, 8] cc => c
Pos: [8, 9] cc => c

Selected: Pos: [6, 8] cc => c
    ... ccccccccccc ... 
target: ^ ^        

----------

Expansion: Candidates size: 1

Pos: [9, 16] cc => I

Selected: Pos: [9, 16] cc => I
    ... cccccccc ... 
target: ^      ^

----------

Expansion: Candidates size: 1

Pos: [11, 13] cc => c

Selected: Pos: [11, 13] cc => c
    ... cccccc ... 
target: ^ ^   

----------

Complete Plan: 

Pos: [0, 2, 4] ccc => cc
Pos: [1, 3] cc => c
Pos: [5, 7] cc => I
Pos: [6, 8] cc => c
Pos: [9, 16] cc => I
Pos: [11, 13] cc => c

Total Saving: 16


----End Timer [Generate Plans]:  0.01460409164428711

----Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2, 4] ccc => cc,
 Pos: [1, 3] cc => c,
 Pos: [5, 7] cc => I,
 Pos: [6, 8] cc => c,
 Pos: [9, 16] cc => I,
 Pos: [11, 13] cc => c]
Change: 6, Saving: 16

Circuit before: ccccccccccccccccc
---------------
Apply:  Pos: [0, 2, 4] ccc => cc
Apply:  Pos: [1, 3] cc => c
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [6, 8] cc => c
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 13] cc => c
---------------
Circuit after: ccccccccc

----End Timer [apply mapping plan]:  0.0

---------------
Origin Circuit: ccccccccccccccccccccccccccccccccccccccccccccc - size: 45
Solved Circuit: ccccccccc - size: 9
change: 36 (80.00%)
End Timer [Execute Mapping]:  0.12827396392822266

Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
----Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]

Candidates: 


------------ 2 ------------
Pattern: 2
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 2]

Candidates: 

[1, 2]
[5, 7]

------------ 3 ------------
Pattern: 3
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]

Candidates: 


------------ 4 ------------
Pattern: 4
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 

[4, 5, 7]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 


------------ 6 ------------
Pattern: 6
    cx [0, 1]
    cx [0, 1]
    => 
    I

Candidates: 


------------ 7 ------------
Pattern: 7
    x [0]
    x [0]
    => 
    I

Candidates: 

----End Timer [Find Candidates]:  0.011924982070922852

----Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 2] cc => c, Pos: [4, 5, 7] ccc => cc, Pos: [5, 7] cc => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [1, 2] cc => c

Selected: Pos: [1, 2] cc => c
    ... cccccccc ... 
target: ^^      

----------

Expansion: Candidates size: 2

Pos: [4, 5, 7] ccc => cc
Pos: [5, 7] cc => c

Selected: Pos: [4, 5, 7] ccc => cc
    ... ccccc ... 
target: ^^ ^ 

----------

Complete Plan: 

Pos: [1, 2] cc => c
Pos: [4, 5, 7] ccc => cc

Total Saving: 4


----End Timer [Generate Plans]:  0.0009987354278564453

----Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 2] cc => c, Pos: [4, 5, 7] ccc => cc]
Change: 2, Saving: 4

Circuit before: ccccccccc
---------------
Apply:  Pos: [1, 2] cc => c
Apply:  Pos: [4, 5, 7] ccc => cc
---------------
Circuit after: ccccccc

----End Timer [apply mapping plan]:  0.00040268898010253906

---------------
Origin Circuit: ccccccccccccccccccccccccccccccccccccccccccccc - size: 45
Solved Circuit: ccccccc - size: 7
change: 38 (84.44%)
End Timer [Execute Mapping]:  0.013326406478881836

Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
----Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]

Candidates: 


------------ 2 ------------
Pattern: 2
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 2]

Candidates: 

[3, 4]

------------ 3 ------------
Pattern: 3
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]

Candidates: 


------------ 4 ------------
Pattern: 4
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 


------------ 6 ------------
Pattern: 6
    cx [0, 1]
    cx [0, 1]
    => 
    I

Candidates: 


------------ 7 ------------
Pattern: 7
    x [0]
    x [0]
    => 
    I

Candidates: 

----End Timer [Find Candidates]:  0.007859945297241211

----Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 4] cc => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [3, 4] cc => c

Selected: Pos: [3, 4] cc => c
    ... cccc ... 
target: ^^  

----------

Complete Plan: 

Pos: [3, 4] cc => c

Total Saving: 2


----End Timer [Generate Plans]:  0.0

----Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 4] cc => c]
Change: 1, Saving: 2

Circuit before: ccccccc
---------------
Apply:  Pos: [3, 4] cc => c
---------------
Circuit after: cccccc

----End Timer [apply mapping plan]:  0.0

---------------
Origin Circuit: ccccccccccccccccccccccccccccccccccccccccccccc - size: 45
Solved Circuit: cccccc - size: 6
change: 39 (86.67%)
End Timer [Execute Mapping]:  0.008857965469360352

Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
----Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]

Candidates: 


------------ 2 ------------
Pattern: 2
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 2]

Candidates: 


------------ 3 ------------
Pattern: 3
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]

Candidates: 


------------ 4 ------------
Pattern: 4
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]

Candidates: 


------------ 6 ------------
Pattern: 6
    cx [0, 1]
    cx [0, 1]
    => 
    I

Candidates: 


------------ 7 ------------
Pattern: 7
    x [0]
    x [0]
    => 
    I

Candidates: 

----End Timer [Find Candidates]:  0.0039904117584228516

----Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


----End Timer [Generate Plans]:  0.0

----Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccc
---------------
---------------
Circuit after: cccccc

----End Timer [apply mapping plan]:  0.0

---------------
Origin Circuit: ccccccccccccccccccccccccccccccccccccccccccccc - size: 45
Solved Circuit: cccccc - size: 6
change: 39 (86.67%)
End Timer [Execute Mapping]:  0.0039904117584228516

