----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.014959096908569336

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0029921531677246094

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0009984970092773438

----End Timer [Execute Mapping]:  0.003990650177001953

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [cx,h,x]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [h,x]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.013963937759399414

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0059850215911865234

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009965896606445312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0009970664978027344

----End Timer [Execute Mapping]:  0.009972572326660156

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0009980201721191406

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009980201721191406

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [x,h]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.01595473289489746

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.006982564926147461

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009953975677490234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0009980201721191406

----End Timer [Execute Mapping]:  0.008975982666015625

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009963512420654297

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009963512420654297

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [h,x]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.014961004257202148

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.005982398986816406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.00099945068359375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.006981849670410156

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009744167327880859

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009744167327880859

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [cx,x,h]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [h,x]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.009973764419555664

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0019943714141845703

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009982585906982422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0029926300048828125

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,cx,h]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [x,h]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.014959573745727539

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0039904117584228516

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009970664978027344

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.004987478256225586

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0020034313201904297

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0020034313201904297

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,cx,h]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [x,h]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.025928974151611328

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.005985736846923828

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009958744049072266

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0009987354278564453

----End Timer [Execute Mapping]:  0.0079803466796875

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0009970664978027344

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009970664978027344

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [x,h]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.012963056564331055

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0049953460693359375

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.001987934112548828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0009996891021728516

----End Timer [Execute Mapping]:  0.007982969284057617

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009965896606445312

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009965896606445312

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [cx,x,h]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [h,x]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07531046867370605

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0039904117584228516

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.0009965896606445312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.004987001419067383

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0009975433349609375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009975433349609375

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [x,h]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.011969566345214844

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.010979413986206055

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 12


--------End Timer [Generate Plans]:  0.000988006591796875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 12

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0009968280792236328

----End Timer [Execute Mapping]:  0.012964248657226562

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.000997781753540039

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.000997781753540039

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [h,x,cx]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [h,x]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - cycle: 12 (80.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.016005516052246094

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[5, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[2, 4]
[8, 10]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.006980180740356445

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [2, 4] xx => I, Pos: [5, 7] cc => I, Pos: [8, 10] xx => I]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 3] cc => I

Selected: Pos: [0, 3] cc => I
    ... chxcxcxcxhx ... 
target: ^  ^       

----------

Expansion: Candidates size: 1

Pos: [2, 4] xx => I

Selected: Pos: [2, 4] xx => I
    ... xcxcxcxhx ... 
target: ^ ^      

----------

Expansion: Candidates size: 1

Pos: [5, 7] cc => I

Selected: Pos: [5, 7] cc => I
    ... cxcxhx ... 
target: ^ ^   

----------

Expansion: Candidates size: 1

Pos: [8, 10] xx => I

Selected: Pos: [8, 10] xx => I
    ... xhx ... 
target: ^ ^

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 3] cc => I
Pos: [2, 4] xx => I
Pos: [5, 7] cc => I
Pos: [8, 10] xx => I

Total Saving: 4


--------End Timer [Generate Plans]:  0.010020256042480469

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [2, 4] xx => I,
 Pos: [5, 7] cc => I,
 Pos: [8, 10] xx => I]
Change: 4, Saving: 4

Circuit before: chxcxcxcxhx
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [2, 4] xx => I
Apply:  Pos: [5, 7] cc => I
Apply:  Pos: [8, 10] xx => I
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0015206336975097656

----End Timer [Execute Mapping]:  0.019519805908203125

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009992122650146484

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hxh
---------------
---------------
Circuit after: hxh

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009992122650146484

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-x-cx-x-cx-x-cx-x-h-x 
     => total size: [11] (IBM)
 --------------------
 - qubits_num: 4, using gates: [h,x,cx]
 - circuit depth: 6 - (small)
 - circuit cycle: 15


>> Solved circuit: 
Circuit Info: 
 - circuit: h-x-h 
     => total size: [3] (IBM)
 --------------------
 - qubits_num: 3, using gates: [x,h]
 - circuit depth: 1 - (small)
 - circuit cycle: 3

Reduced: 
 - size: 8 (72.73%)
 - depth: 5 (83.33%)

