----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.016945600509643555

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.002991199493408203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009975433349609375

----End Timer [Execute Mapping]:  0.003988742828369141

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009944438934326172

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0019936561584472656

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [cx,h,x]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [cx,h]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.015956878662109375

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.002991199493408203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.000997304916381836

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.003988504409790039

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.001001596450805664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0020020008087158203

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [h,cx]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.011967658996582031

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0029926300048828125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009965896606445312

----End Timer [Execute Mapping]:  0.00498652458190918

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009975433349609375

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009970664978027344

----End Timer [Execute Mapping]:  0.001994609832763672

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [h,cx]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.015994787216186523

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.002988100051879883

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009968280792236328

----End Timer [Execute Mapping]:  0.003984928131103516

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009975433349609375

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [cx,x,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [h,cx]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.014959573745727539

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0019960403442382812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009963512420654297

----End Timer [Execute Mapping]:  0.002992391586303711

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009961128234863281

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,cx,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [cx,h]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.021944046020507812

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0029892921447753906

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009970664978027344

----End Timer [Execute Mapping]:  0.003986358642578125

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.001995563507080078

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,cx,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [cx,h]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.012967586517333984

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0029909610748291016

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0009965896606445312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.004984140396118164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009961128234863281

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009961128234863281

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [cx,h]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.012965202331542969

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.003987789154052734

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0009992122650146484

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009968280792236328

----End Timer [Execute Mapping]:  0.005983829498291016

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009999275207519531

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009999275207519531

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [cx,x,h]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [h,cx]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.013962030410766602

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.003989219665527344

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.0009963512420654297

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009982585906982422

----End Timer [Execute Mapping]:  0.005983829498291016

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009965896606445312

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009965896606445312

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [x,h,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [h,cx]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.010970354080200195

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0029938220977783203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 8


--------End Timer [Generate Plans]:  0.00099945068359375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 8

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.00399327278137207

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0009887218475341797

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0009887218475341797

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [h,x,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [h,cx]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - cycle: 8 (57.14%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.014960527420043945

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 2]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[3, 4, 5]
[6, 7, 8]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0029926300048828125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]

Monte Carlo-based plan searching

------------

Expansion: Candidates size: 1

Pos: [0, 2] cc => I

Selected: Pos: [0, 2] cc => I
    ... chcxcxxcxh ... 
target: ^ ^       

----------

Expansion: Candidates size: 1

Pos: [3, 4, 5] xcx => c

Selected: Pos: [3, 4, 5] xcx => c
    ... xcxxcxh ... 
target: ^^^    

----------

Expansion: Candidates size: 1

Pos: [6, 7, 8] xcx => c

Selected: Pos: [6, 7, 8] xcx => c
    ... xcxh ... 
target: ^^^ 

----------

Expansion: Candidates size: 0

Complete Plan: 

Pos: [0, 2] cc => I
Pos: [3, 4, 5] xcx => c
Pos: [6, 7, 8] xcx => c

Total Saving: 5


--------End Timer [Generate Plans]:  0.004134178161621094

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 2] cc => I, Pos: [3, 4, 5] xcx => c, Pos: [6, 7, 8] xcx => c]
Change: 3, Saving: 5

Circuit before: chcxcxxcxh
---------------
Apply:  Pos: [0, 2] cc => I
Apply:  Pos: [3, 4, 5] xcx => c
Apply:  Pos: [6, 7, 8] xcx => c
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0009613037109375

----End Timer [Execute Mapping]:  0.008088111877441406

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

--------End Timer [Find Candidates]:  0.0010018348693847656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

Monte Carlo-based plan searching

------------

Complete Plan: 



Total Saving: 0


--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: hcch
---------------
---------------
Circuit after: hcch

--------End Timer [apply mapping plan]:  0.0

----End Timer [Execute Mapping]:  0.0010018348693847656

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-h-cx-x-cx-x-x-cx-x-h 
     => total size: [10] (IBM)
 --------------------
 - qubits_num: 4, using gates: [h,x,cx]
 - circuit depth: 5 - (small)
 - circuit cycle: 14


>> Solved circuit: 
Circuit Info: 
 - circuit: h-cx-cx-h 
     => total size: [4] (IBM)
 --------------------
 - qubits_num: 2, using gates: [cx,h]
 - circuit depth: 4 - (small)
 - circuit cycle: 6

Reduced: 
 - size: 6 (60.00%)
 - depth: 1 (20.00%)

